@mixin gradient-vertical($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {
  background-image: -webkit-linear-gradient(top, $start-color $start-percent, $end-color $end-percent);  // Safari 5.1-6, Chrome 10+
  background-image: -o-linear-gradient(top, $start-color $start-percent, $end-color $end-percent);  // Opera 12
  background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=0); // IE9 and down
}

@mixin linearVerticalGradient($top, $bottom, $start-percent: 0%, $end-percent: 100%){
  background: $top; /* Old browsers */
  background: -moz-linear-gradient(top,  $top $start-percent, $bottom $end-percent); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop($start-percent,$top), color-stop($end-percent,$bottom)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top,  $top $start-percent,$bottom $end-percent); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top,  $top $start-percent,$bottom $end-percent); /* Opera 11.10+ */
  background: -ms-linear-gradient(top,  $top $start-percent,$bottom $end-percent); /* IE10+ */
  background: linear-gradient(to bottom,  $top $start-percent,$bottom $end-percent); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
}

@mixin linearHorizontalGradient($top, $bottom, $start-percent: 0%, $end-percent: 100%){
  background: $top; /* Old browsers */
  background: -moz-linear-gradient(left,  $top $start-percent, $bottom $end-percent); /* FF3.6+ */
  background: -webkit-linear-gradient(left,  $top $start-percent,$bottom $end-percent); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(left,  $top $start-percent,$bottom $end-percent); /* Opera 11.10+ */
  background: -ms-linear-gradient(left,  $top $start-percent,$bottom $end-percent); /* IE10+ */
  background: linear-gradient(to right,  $top $start-percent,$bottom $end-percent); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
}

@mixin leftRightDiagonalGradient($left, $right, $start-percent: 0%, $end-percent: 100%){
  background: $right; /* Old browsers */
  background-size: contain;
  background: -moz-linear-gradient(-45deg, $left $start-percent, $right $end-percent); /* FF3.6-15 */
  background: -webkit-gradient(linear, left top, right bottom, color-stop($start-percent,$left), color-stop($end-percent,$right)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(-45deg, $left $start-percent, $right $end-percent); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(135deg,  $left $start-percent,$right $end-percent); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=$left, endColorstr=$right,GradientType=1 ); /* IE6-9 */
}

@mixin angle($pseudo, $flip: false, $angle: 1.5deg) {
  // Possible values for $pseudo are: before, after, both
  @if $pseudo == 'before' or $pseudo == 'after' or $pseudo == 'both' {
    position: relative;
    z-index: 1;
    $selector: if($pseudo == 'both', '&:before,&:after', '&:#{$pseudo}');

    #{$selector} {
      background: inherit;
      content: '';
      display: block;
      height: 50%;
      left: 0;
      position: absolute;
      right: 0;
      z-index: -1;
      -webkit-backface-visibility: hidden; // for Chrome Windows
    }

    @if $pseudo == 'before' {
      #{$selector} {
        top: 0;

        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle);
          transform-origin: 100% 0;
        }
      }
    }

    @if $pseudo == 'after' {
      #{$selector} {
        bottom: 0;

        @if $flip {
          transform: skewY($angle);
          transform-origin: 0 100%;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        }
      }
    }

    @if $pseudo == 'both' {
      &:before {
        top: 0;

        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle);
          transform-origin: 100% 0;
        }
      }

      &:after {
        bottom: 0;

        @if $flip {
          transform: skewY($angle);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        }
      }
    }
  }
}

@mixin box-shadow($horizontal: 1px, $vertical: 3px, $blur: 4px, $spread: 0, $color: rgba(0,0,0,0.22)){
  -webkit-box-shadow: $horizontal $vertical $blur $spread $color;
  -moz-box-shadow: $horizontal $vertical $blur $spread $color;
  box-shadow: $horizontal $vertical $blur $spread $color;
}


@mixin responsive-bg-image($image-width, $image-height) {
  background-size: 100%;
  height: 0;
  padding-bottom: percentage($image-height / $image-width);
  display: block;
}


